{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAW,EAAG,SAAS,gBAAgB,CAAC,OACxC,EAAY,SAAS,aAAa,CAAC,SACnC,EAAa,EAAG,EAAU,gBAAgB,CAAC,OAEjD,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAIjC,EAAU,IAAI,CAAC,SAAC,CAAA,CAAM,CAAtB,EACE,IAAM,EAAQ,EAAK,KAAK,CALyB,EAKlB,CAAC,WAAW,CACrC,EAAQ,EAAK,KAAK,CANyB,EAMlB,CAAC,WAAW,CAE3C,OAAO,EAAM,aAAa,CAAC,EAAO,KAAA,EAAW,CAAE,QAAS,CAAA,CAAK,EAC/D,GAEA,EAAU,SAAS,CAAG,GACtB,EAAU,OAAO,CAAC,SAAC,CAAnB,EAA2B,OAAA,EAAU,MAAM,CAAC,E,E,EAX9C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar headers = _to_consumable_array(document.querySelectorAll(\"th\"));\nvar tableBody = document.querySelector(\"tbody\");\nvar tableRows = _to_consumable_array(tableBody.querySelectorAll(\"tr\"));\nheaders.forEach(function(header, i) {\n    header.addEventListener(\"click\", function() {\n        return sortByIndex(i);\n    });\n});\nfunction sortByIndex(index) {\n    tableRows.sort(function(row1, row2) {\n        var cell1 = row1.cells[index].textContent;\n        var cell2 = row2.cells[index].textContent;\n        return cell1.localeCompare(cell2, undefined, {\n            numeric: true\n        });\n    });\n    tableBody.innerHTML = \"\";\n    tableRows.forEach(function(row) {\n        return tableBody.append(row);\n    });\n}\n\n//# sourceMappingURL=index.10ac3f42.js.map\n","'use strict';\n\nconst headers = [...document.querySelectorAll('th')];\nconst tableBody = document.querySelector('tbody');\nconst tableRows = [...tableBody.querySelectorAll('tr')];\n\nheaders.forEach((header, i) => {\n  header.addEventListener('click', () => sortByIndex(i));\n});\n\nfunction sortByIndex(index) {\n  tableRows.sort((row1, row2) => {\n    const cell1 = row1.cells[index].textContent;\n    const cell2 = row2.cells[index].textContent;\n\n    return cell1.localeCompare(cell2, undefined, { numeric: true });\n  });\n\n  tableBody.innerHTML = '';\n  tableRows.forEach((row) => tableBody.append(row));\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","headers","document","querySelectorAll","tableBody","querySelector","tableRows","forEach","header","addEventListener","sort","row1","row2","cell1","cells","textContent","cell2","localeCompare","undefined","numeric","innerHTML","row","append"],"version":3,"file":"index.10ac3f42.js.map"}